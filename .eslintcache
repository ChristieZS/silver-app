[{"C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\index.js":"1","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\App.js":"2","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\reportWebVitals.js":"3","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\pokedex.js":"4","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\catchable.js":"5","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\kanto.js":"6","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\johto.js":"7","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\routes.js":"8"},{"size":250,"mtime":1614260480489,"results":"9","hashOfConfig":"10"},{"size":3411,"mtime":1614344391128,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":1992,"mtime":1614257780618,"results":"13","hashOfConfig":"10"},{"size":1449,"mtime":1612266089607,"results":"14","hashOfConfig":"10"},{"size":2358,"mtime":1614268710326,"results":"15","hashOfConfig":"10"},{"size":2024,"mtime":1614268684247,"results":"16","hashOfConfig":"10"},{"size":7806,"mtime":1614268945719,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1b33nyi",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"38","usedDeprecatedRules":"20"},"C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\index.js",[],["39","40"],"C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\App.js",[],"C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\reportWebVitals.js",[],["41","42"],"C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\pokedex.js",[],"C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\catchable.js",[],"C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\kanto.js",["43"],"import React from \"react\";\r\nimport '../css/bootstrap.min.css';\r\nimport {Link } from \"react-router-dom\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass Kanto extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            locationsKanto: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const apiUrl = 'https://pokeapi.co/api/v2/region/1/';\r\n        fetch(apiUrl)\r\n            .then((response) => response.json())\r\n            .then((data) => this.setState({locationsKanto: data.locations}))\r\n    }\r\n\r\n    locationReformat = (loc) => {\r\n        let locationFormat = loc.replace(/\\b\\w/g, l => l.toUpperCase())\r\n        return locationFormat.replaceAll(\"-\", ' ');\r\n    }\r\n\r\n    locationList = () => {\r\n        const flexContainer = {\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n            flexWrap: \"wrap\"\r\n        }\r\n    \r\n        const boxStyle = {\r\n            width: \"150px\",\r\n            height: \"150px\",\r\n            margin: \"auto\",\r\n            textAlign: \"center\",\r\n        }\r\n\r\n        const locLis = this.state.locationsKanto.map((location, index) =>\r\n        {if(index < 50 && location.name !== \"seafoam-islands\" && location.name !== \"cerulean-cave\" && location.name !== \"viridian-forest\" && location.name !== \"power-plant\" && location.name !== \"kanto-victory-road-2\" && location.name !== \"pokemon-tower\" && location.name !== \"pokemon-mansion\" && location.name !== \"kanto-safari-zone\"){\r\n            return (\r\n                <div style={flexContainer}>\r\n                    <Link to={{pathname: \"/routes\", hash: `${location.url}`}} className=\"nav-link\"> <Button key={index} className=\"btn btn-light\" style={boxStyle} > {this.locationReformat(location.name)} </Button> </Link>\r\n                </div>  \r\n            ) \r\n        }})\r\n\r\n        return locLis;\r\n    }\r\n\r\n    render() {\r\n        const pagePadding = {\r\n            paddingTop: '50px',\r\n            paddingLeft: '50px',\r\n            paddingRight: '50px',\r\n        }\r\n        \r\n        return (\r\n            <div className=\"container\" style={pagePadding}>\r\n                <h1>Kanto Routes</h1>\r\n                <br/>\r\n                <div className=\"d-flex flex-wrap\">\r\n                    {this.locationList()}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Kanto;","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\johto.js",["44"],"import React from \"react\";\nimport '../css/bootstrap.min.css';\nimport {Link } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap';\n\nclass Johto extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locationsJohto: []\n        };\n    }\n\n    componentDidMount() {\n        const apiUrl = 'https://pokeapi.co/api/v2/region/2/';\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then((data) => this.setState({locationsJohto: data.locations}))\n    }\n\n    locationReformat = (loc) => {\n        let locationFormat = loc.replace(/\\b\\w/g, l => l.toUpperCase())\n        return locationFormat.replaceAll(\"-\", ' ');\n    }\n\n    locationList = () => {\n        const flexContainer = {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n        }\n    \n        const boxStyle = {\n            width: \"150px\",\n            height: \"150px\",\n            margin: \"auto\",\n            textAlign: \"center\",\n        }\n\n        const locLis = this.state.locationsJohto.map((location, index) =>\n        {if(index < 48 && location.name.includes(\"unknown\") === false){\n            return (\n                <div style={flexContainer}>\n                    <Link to={{pathname: \"/routes\", hash: `${location.url}`}} className=\"nav-link\"> <Button key={index} className=\"btn btn-light\" style={boxStyle} > {this.locationReformat(location.name)} </Button> </Link>\n                </div>  \n            ) \n        }})\n\n        return locLis;\n    }\n\n    render() {\n        const pagePadding = {\n            paddingTop: '50px',\n            paddingLeft: '50px',\n            paddingRight: '50px',\n        }\n        \n        return (\n            <div className=\"container\" style={pagePadding}>\n                <h1>Johto Routes</h1>\n                <br/>\n                <div className=\"d-flex flex-wrap\">\n                    {this.locationList()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Johto;","C:\\Users\\Christie\\Desktop\\JavaScript\\silver-app\\src\\components\\routes.js",["45"],"import React from \"react\";\nimport '../css/bootstrap.min.css';\n\nclass Routes extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locationInfo: [],\n            pokemonImageURL: [],\n            APIError: false,\n            locationArray: [],\n            locationEncounters0: [],\n            locationEncounters1: [],\n            locationEncounters2: [],\n        };\n    }\n\n    componentDidMount() {\n        let locationURL = window.location.href;\n        let locationIndex = locationURL.indexOf(\"#\") + 1;\n        let locationHash = locationURL.substring(locationIndex)\n        \n        const apiUrl = locationHash;\n        fetch(apiUrl)\n            .then((response) => response.json())\n            .then((data) => {\n                this.setState({locationInfo: data})\n                this.obtainEncounterData()\n            })\n            .catch(function() {\n                console.log(\"API error\")\n            }.bind(this))\n    }\n\n    getCookie(cname) {\n        var name = cname + \"=\";\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var ca = decodedCookie.split(';');\n        for(var i = 0; i <ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') {\n                c = c.substring(1);\n            }\n            if (c.indexOf(name) === 0) {\n                return c.substring(name.length, c.length);\n            }\n        }\n        return \"\";\n    }\n\n    locationReformat = (loc) => {\n        if(!loc) return\n        let locationFormat = loc.replace(/\\b\\w/g, l => l.toUpperCase())\n        return locationFormat.replaceAll(\"-\", ' ');\n    }\n\n    createPokemonImage = (url) => {\n        const pokeIndex = url.indexOf(\"mon\");\n        const pokeSlice = url.slice(pokeIndex + 4);\n        const pokeLIndex = pokeSlice.lastIndexOf(\"/\");\n        const pokeNum = pokeSlice.slice(0, pokeLIndex)\n\n        return \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/versions/generation-ii/silver/\"+pokeNum+\".png\";\n    }\n\n    createPokemonNum = (url) => {\n        const pokeIndex = url.indexOf(\"mon\");\n        const pokeSlice = url.slice(pokeIndex + 4);\n        const pokeLIndex = pokeSlice.lastIndexOf(\"/\");\n        const pokeNum = pokeSlice.slice(0, pokeLIndex);\n        \n        return pokeNum;\n    }\n\n    obtainEncounterData() {\n        for(var i=0; this.state.locationInfo.areas.length; i++) {\n            const statee = \"locationEncounters\" + i\n            fetch(this.state.locationInfo.areas[i].url)\n                .then((response) => response.json())\n                .then((data) => this.setState({[statee]: data}))\n                .then(this.state.locationArray.push(statee)) \n        }\n    }\n\n    levelChecker = (min, max) => {\n        if(min === max){\n            return min\n        }\n        else if(min !== max){\n            return min + \" - \" + max\n        }\n        else{\n            return \"Level calculating error!\"\n        }\n    }\n\n    encounterHandle = (condition, chance, method, minLev, maxLev) => {\n        if(condition === \"All Day\" || condition === \"time-day\" || condition === \"time-night\" || condition === \"time-morning\"){\n            return this.reformatString(condition) + \": \" + chance + \" [\" + this.reformatString(method) + \"] (Level: \" + this.levelChecker(minLev, maxLev) + \")\"\n        }\n\n        else if(condition === \"swarm-no\"){\n            return \"All Day: \" + chance + \" [\" + this.reformatString(method) + \"] (Level: \" + this.levelChecker(minLev, maxLev) + \")\"\n        }\n\n        else if(condition === \"swarm-yes\"){\n            return \"Swarm Encounter: \" + chance + \" [\" + this.reformatString(method) + \"] (Level: \" + this.levelChecker(minLev, maxLev) + \")\"\n        }\n\n        else {\n            return \"encounterHandle error...\"\n        }\n    }\n\n    reformatString(str) {\n        let strDash = str.replaceAll(\"-\", ' ');\n        let strCapital = strDash.replace(/\\b\\w/g, l => l.toUpperCase())\n        return strCapital\n    }\n    \n    capitalize = (s) => {\n        if (typeof s !== 'string') return 'error! not string!'\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n\n    calculateDayEncounter = (encounters) => {                                                       //passing in        poke.version_details[1].encounter_details\n        return (\n            encounters.map((e, i) =>                                                    //goes through each encounter for each pokemon\n                (e.condition_values.length === 0 ?\n                <p>{this.encounterHandle(\"All Day\", e.chance, e.method.name, e.min_level, e.max_level)}</p>\n            :\n                e.condition_values.map((c, j) =>\n                    <p>{this.encounterHandle(c.name, e.chance, e.method.name, e.min_level, e.max_level)}</p>\n                ))\n            )\n        )\n    }\n\n    versionChecker = (versions) => {\n        var gameVersion = this.getCookie(\"version\")\n\n        for(var i=0; i < versions.length; i++) {\n            if(versions[i].version.name === gameVersion) {\n                console.log(\"version showing is...  \" + versions[i].version.name)\n                return true\n            }\n        }\n    }\n\n    versionIndexChecker = (ver) => {\n        var gameVersion = this.getCookie(\"version\")\n\n        for(var i=0; i < ver.length; i++) {\n            if(ver[i].version.name === gameVersion) {\n                return i\n            }\n        }\n    }\n\n    renderPokemon = (poke, index) => {\n        const boxStyle = {\n            width: \"120px\",\n            height: \"120px\",\n            border: \"groove\",\n            margin: \"auto\",\n            textAlign: \"center\",\n        }\n\n        const flexContainer = {\n            display: \"flex\",\n            flexDirection: \"row\",\n            flexWrap: \"wrap\"\n        }\n\n        const imageStyle = {\n            width: \"50px\",\n            height: \"50px\",\n        }\n\n        return (\n            <div style={flexContainer}>\n                <ul key={index}>\n                    <p style={boxStyle}> #{this.createPokemonNum(poke.pokemon.url)} <br/> {this.capitalize(poke.pokemon.name)} <br/>\n                    <img alt={poke.pokemon.name} src={this.createPokemonImage(poke.pokemon.url)} style={imageStyle}></img> </p> <br/>\n                    <hr/>\n                    <p>{this.calculateDayEncounter(poke.version_details[this.versionIndexChecker(poke.version_details)].encounter_details)}</p>\n                </ul>\n            </div>\n        ) \n    }\n\n    locationEncounterList = () => {\n        return (\n            <div className=\"container\">\n                {this.state.locationArray.map((loc) => {\n                    return (\n                        <div>\n                        {(this.state[loc]?.name) ? <h2>{this.locationReformat(this.state[loc].name)}</h2> : \"Error: Location Not Found\"}\n                        <br/>\n                            <div className=\"container d-flex flex-wrap\">\n                                    {this.state[loc]?.pokemon_encounters ? this.state[loc].pokemon_encounters.map((poke, index) => {\n                                        return(this.versionChecker(poke.version_details) ? this.renderPokemon(poke, index) : <p></p>)\n                                    })\n                                    :\n                                        \"Error: Pokemon Encounters Undefined\"\n                                    }\n                            </div>\n                        </div>\n                    )\n                })}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <br/>\n                <h1>{this.locationReformat(this.state.locationInfo.name)}</h1>\n                <br/>\n                {this.locationEncounterList()}\n            </div>\n        );\n    }\n}\n\nexport default Routes;",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":40,"column":72,"nodeType":"54","messageId":"55","endLine":40,"endColumn":74},{"ruleId":"52","severity":1,"message":"53","line":40,"column":72,"nodeType":"54","messageId":"55","endLine":40,"endColumn":74},{"ruleId":"56","severity":1,"message":"57","line":32,"column":15,"nodeType":"58","messageId":"59","endLine":32,"endColumn":19,"fix":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],["61"],["62"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"63","text":"64"},"no-global-assign","no-unsafe-negation",[963,974],""]